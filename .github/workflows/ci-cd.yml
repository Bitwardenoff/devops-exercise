name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - docker-container-setup 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --dev

      - name: Run tests
        run: |
          pipenv run pytest tests/unit

      - name: Build and push Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/docker-container-setup'
        run: |
          echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u hamed1241 --password-stdin
          docker build -t ghcr.io/hamed1241/devops-exercise/bw-devops-exercise .
          docker push ghcr.io/hamed1241/devops-exercise/bw-devops-exercise
      
          # Build and push the latest tag
          docker build -t ghcr.io/hamed1241/devops-exercise/bw-devops-exercise:latest .
          docker push ghcr.io/hamed1241/devops-exercise/bw-devops-exercise:latest

      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/docker-container-setup'
        env:
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |

          git config --global user.email "hamedsaghir9@gmail.com"
          git config --global user.name "Hamed Saghir"

          VERSION=$(cat version.json | jq -r .baseVersion)
          TAG_NAME="v$VERSION"
          
          if [[ $VERSION != *.*.* ]]; then
            VERSION="${VERSION}.0"
            echo "{\"baseVersion\": \"$VERSION\"}" > version.json
            git add version.json
            git commit -m "Reset patch version to 0"
            git push origin docker-container-setup
          fi
          
          if gh release view "$TAG_NAME" >/dev/null 2>&1; then
   
           NEW_VERSION="${VERSION%.*}.$((${VERSION##*.} + 1))"
           TAG_NAME="v$NEW_VERSION"
          fi

          gh release create "$TAG_NAME" --title "Release $TAG_NAME" --notes "Releasing $TAG_NAME" 